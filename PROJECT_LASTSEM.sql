--TẠO DATABASE
USE master
GO
CREATE DATABASE THITHUTRACNGHIEM 
ON PRIMARY (
NAME = 'THITHUTRACNGHIEM_DATA',
FILENAME = 'E:\HQTCSDL\THITHUTRACNGHIEM_DATA.mdf',
SIZE = 50MB,
MAXSIZE = UNLIMITED,
FILEGROWTH = 5MB
)
LOG ON (
NAME = 'THITHUTRACNGHIEM_LOG',
FILENAME = 'E:\HQTCSDL\THITHUTRACNGHIEM_LOG.ldf',
SIZE = 20MB,
MAXSIZE = UNLIMITED,
FILEGROWTH = 5MB
)
COLLATE Vietnamese_CI_AS;
GO
--TẠO TABLE 
USE THITHUTRACNGHIEM
GO
CREATE TABLE HOCVIEN (
MAHV INT IDENTITY PRIMARY KEY,
HOHV NVARCHAR(20) NOT NULL,
TENHV NVARCHAR(20) NOT NULL,
DIACHI NVARCHAR(100) NULL,
GIOITINH NVARCHAR(3) NOT NULL CHECK (GIOITINH IN (N'Nam',N'Nữ')),
SDT NUMERIC(12,0) NOT NULL CHECK (SDT > 0 AND LEN(SDT)<12),
MATKHAU NVARCHAR(16) NOT NULL CHECK (LEN(MATKHAU) > 5),
MALH INT NULL
)
GO 
CREATE TABLE LOPHOC (
MALH INT IDENTITY PRIMARY KEY,
TENLH NVARCHAR(20) UNIQUE NOT NULL
)
GO
CREATE TABLE MONHOC (
MAMH INT IDENTITY PRIMARY KEY,
TENMH NVARCHAR(20) UNIQUE NOT NULL
)
GO
CREATE TABLE CHUONG (
MACHUONG INT IDENTITY PRIMARY KEY,
TENCHUONG NVARCHAR(20) NOT NULL,
MAMH INT NULL
)
GO
CREATE TABLE CAUHOI (
MACH INT IDENTITY PRIMARY KEY,
NOIDUNG TEXT NOT NULL,
DAPANA TEXT NOT NULL,
DAPANB TEXT NOT NULL,
DAPANC TEXT NOT NULL,
DAPAND TEXT NOT NULL,
DAPANDUNG VARCHAR(1) NOT NULL,
MACHUONG INT NULL
)
GO
CREATE TABLE DETHI (
MADT INT IDENTITY PRIMARY KEY,
NGAYTHI DATE NOT NULL,
MAMH INT NULL
)
GO
CREATE TABLE DANHSACHMH (
MALH INT NOT NULL,
MAMH INT NOT NULL,
CONSTRAINT PK_DSMH PRIMARY KEY (MALH,MAMH)
)
GO
CREATE TABLE CHITIETDETHI(
MACH INT NOT NULL,
MADT INT NOT NULL,
SOTT INT NOT NULL,
CONSTRAINT PK_CTDT PRIMARY KEY (MACH, MADT, SOTT)
)
GO
CREATE TABLE CHITIETBAILAM (
MAHV INT NOT NULL,
MADT INT NOT NULL,
SOTT INT NOT NULL,
CAUTL VARCHAR(1) NULL, 
CONSTRAINT PK_CTBL PRIMARY KEY (MAHV, MADT, SOTT),
)
GO
--THÊM CONSTRAINT 
ALTER TABLE HOCVIEN ADD CONSTRAINT FK_HVLH FOREIGN KEY (MALH) REFERENCES LOPHOC(MALH)
GO
ALTER TABLE CHUONG ADD CONSTRAINT FK_CMH FOREIGN KEY (MAMH) REFERENCES MONHOC(MAMH)
GO
ALTER TABLE CAUHOI ADD CONSTRAINT FK_CHC FOREIGN KEY (MACHUONG) REFERENCES CHUONG(MACHUONG)
GO
ALTER TABLE DANHSACHMH ADD CONSTRAINT FK_DSMH_MH FOREIGN KEY (MAMH) REFERENCES MONHOC(MAMH)
GO
ALTER TABLE DANHSACHMH ADD CONSTRAINT FK_DSMH_LH FOREIGN KEY (MALH) REFERENCES LOPHOC(MALH)
GO
ALTER TABLE CHITIETDETHI ADD CONSTRAINT FK_CTDT_DT FOREIGN KEY (MADT) REFERENCES DETHI(MADT)
GO
ALTER TABLE CHITIETDETHI ADD CONSTRAINT FK_CTDT_CH FOREIGN KEY (MACH) REFERENCES CAUHOI(MACH)
GO
ALTER TABLE CHITIETDETHI ADD CONSTRAINT CHECK_RANGE CHECK (SOTT >0 AND SOTT <41)
GO
ALTER TABLE CHITIETBAILAM ADD CONSTRAINT FK_CTBL_HV FOREIGN KEY (MAHV) REFERENCES HOCVIEN(MAHV)
GO
ALTER TABLE CHITIETBAILAM ADD CONSTRAINT FK_CTBL_DT FOREIGN KEY (MADT) REFERENCES DETHI(MADT)
GO
ALTER TABLE CHITIETBAILAM ADD CONSTRAINT CHECK_RANGE_BL CHECK (SOTT >0 AND SOTT <41)
GO

--***********QUẢN LÝ THÔNG TIN LỚP HỌC***********
--1.THÊM MỚI LỚP HỌC
CREATE PROC sp_THEMLOPHOC 
@TENLH NVARCHAR(20) 
AS 
BEGIN
  BEGIN TRANSACTION
  IF @TENLH IS NULL
  BEGIN 
    PRINT N'Tên lớp học không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END

  IF EXISTS (SELECT 1 FROM LOPHOC WHERE TENLH = @TENLH)
  BEGIN 
    PRINT N'Tên lớp học đã tồn tại.'
    ROLLBACK
    RETURN
  END
  INSERT INTO LOPHOC (TENLH) VALUES (@TENLH)
  COMMIT TRANSACTION
END
GO
--TEST THỦ TỤC THÊM MỚI LỚP HỌC
EXEC sp_THEMLOPHOC N'Lớp chuyên 001'
SELECT * FROM LOPHOC
GO
EXEC sp_THEMLOPHOC N'Lớp chuyên 001'
GO
EXEC sp_THEMLOPHOC NULL
GO
--2.CẬP NHẬT LỚP HỌC
CREATE PROC sp_CAPNHATLOPHOC
@MALH INT,
@TENLH NVARCHAR(20)
AS
BEGIN
  BEGIN TRANSACTION 
  IF @MALH IS NULL OR @TENLH IS NULL
  BEGIN 
    PRINT N'Thông tin lớp học không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END

  IF NOT EXISTS (SELECT 1 FROM LOPHOC WHERE MALH = @MALH)
  BEGIN
    PRINT N'Lớp học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF EXISTS (SELECT 1 FROM LOPHOC WHERE TENLH = @TENLH) 
  BEGIN 
    PRINT N'Tên lớp học đã tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  UPDATE LOPHOC SET TENLH = @TENLH WHERE MALH = @MALH
  COMMIT TRANSACTION
END
GO
--TEST THỦ TỤC CẬP NHẬT LỚP HỌC
EXEC sp_CAPNHATLOPHOC 1,N'Lớp chuyên 002'
SELECT * FROM LOPHOC
GO
EXEC sp_CAPNHATLOPHOC 1,N'Lớp chuyên 002'
GO
EXEC sp_CAPNHATLOPHOC NULL,N'LỚP'
GO
--3.XÓA THÔNG TIN MỘT LỚP HỌC THEO MÃ
--TẠO BẢNG BACKUP DỮ LIỆU
CREATE TABLE LOPHOC_BACKUP (
MALH INT NOT NULL,
TENLH NVARCHAR(20) NOT NULL,
DELETEDDATE DATE DEFAULT GETDATE()
)
GO
--TẠO TRIGGER XỬ LÝ DỮ LIỆU BACKUP
CREATE TRIGGER Trg_BACKUPLOPHOC
ON LOPHOC 
AFTER DELETE
AS 
BEGIN
  BEGIN
  SET IDENTITY_INSERT LOPHOC ON;
  END
  INSERT INTO LOPHOC_BACKUP(MALH,TENLH) SELECT MALH,TENLH FROM deleted;
  BEGIN
  SET IDENTITY_INSERT LOPHOC OFF;
  END
END
GO
--THỦ TỤC XÓA LỚP HỌC THEO MÃ
CREATE PROC sp_XOALOPHOC
@MALH INT
AS
BEGIN 
  BEGIN TRANSACTION
  IF @MALH IS NULL
  BEGIN 
    PRINT N'Mã lớp học không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  IF NOT EXISTS (SELECT 1 FROM LOPHOC WHERE MALH = @MALH)
  BEGIN
	PRINT N'Lớp học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  UPDATE HOCVIEN SET MALH = NULL WHERE MALH = @MALH
  DELETE FROM DANHSACHMH WHERE MALH = @MALH
  DELETE FROM LOPHOC WHERE MALH = @MALH
  COMMIT TRANSACTION
END
GO
--THỦ TỤC KHÔI PHỤC DỮ LIỆU
CREATE PROC sp_KHOIPHUCLOPHOC
@MALH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MALH IS NULL
  BEGIN 
    PRINT N'Mã lớp học không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  IF NOT EXISTS (SELECT 1 FROM LOPHOC_BACKUP WHERE MALH = @MALH)
  BEGIN
	PRINT N'Lớp học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  BEGIN
  SET IDENTITY_INSERT LOPHOC ON;
  END
  INSERT INTO LOPHOC (MALH,TENLH) SELECT MALH,TENLH FROM LOPHOC_BACKUP BK WHERE BK.MALH = @MALH
  DELETE FROM LOPHOC_BACKUP WHERE MALH = @MALH
  BEGIN
  SET IDENTITY_INSERT LOPHOC OFF;
  END
  COMMIT TRANSACTION
END
GO
--TEST XOA LOP HOC
EXEC sp_XOALOPHOC 1
SELECT * FROM LOPHOC
SELECT * FROM LOPHOC_BACKUP
GO
--TEST KHÔI PHỤC LỚP HỌC
EXEC sp_KHOIPHUCLOPHOC 1
SELECT * FROM LOPHOC
SELECT * FROM LOPHOC_BACKUP
GO
--4.TÌM KIẾM LỚP HỌC THEO MÃ HOẶC TÊN
CREATE PROCEDURE sp_TIMKIEMLOPHOC
@SearchText NVARCHAR(20)
AS
BEGIN
  SELECT LH.MALH, LH.TENLH, COUNT(HV.MAHV) AS SISO
  FROM LOPHOC LH JOIN HOCVIEN HV ON HV.MALH = LH.MALH
  WHERE TENLH LIKE '%' + @SearchText + '%'
  OR CAST(LH.MALH AS NVARCHAR(10)) = @SearchText
  GROUP BY LH.MALH,LH.TENLH
  ORDER BY LH.MALH
END
GO
--TEST TÌM KIẾM LỚP HỌC THEO TÊN HOẶC MÃ 
EXEC sp_TIMKIEMLOPHOC N'L'
GO
EXEC sp_TIMKIEMLOPHOC 1
GO
--5.TÌM KIẾM DANH SÁCH MÔN HỌC CỦA 1 LỚP HỌC
CREATE PROCEDURE sp_TIMKIEMDSMH
@SearchText NVARCHAR(20)
AS
BEGIN
  SELECT LH.MALH, LH.TENLH, MH.MAMH, MH.TENMH
  FROM DANHSACHMH DS  JOIN LOPHOC LH  ON DS.MALH = DS.MALH JOIN MONHOC MH ON MH.MAMH = DS.MAMH
  WHERE TENLH LIKE '%' + @SearchText + '%'
  OR CAST(LH.MALH AS NVARCHAR(10)) = @SearchText
  ORDER BY LH.MALH
END
GO
--TEST TÌM KIẾM MÔN HỌC CỦA 1 LỚP
EXEC sp_TIMKIEMDSMH N'L'
GO
EXEC sp_TIMKIEMDSMH 1
GO
--6.THÊM MÔN HỌC VÀO DANH SÁCH MÔN HỌC CỦA 1 LỚP
CREATE PROC sp_THEMMOIMHVAODSMH 
@MALH INT,
@MAMH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MALH IS NULL OR @MALH IS NULL 
  BEGIN
    PRINT N'Thông tin không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM MONHOC WHERE MAMH = @MAMH)
  BEGIN
    PRINT N'Môn học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM LOPHOC WHERE MALH = @MALH)
  BEGIN
    PRINT N'Lớp học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF EXISTS (SELECT 1 FROM DANHSACHMH WHERE MALH = @MALH AND MAMH = @MAMH)
  BEGIN
    PRINT N'Môn học đã tồn tại trong danh sách'
	ROLLBACK TRANSACTION
	RETURN
  END
  INSERT INTO DANHSACHMH VALUES (@MALH,@MAMH)
  COMMIT TRANSACTION
END
GO
--TEST THÊM MỚI MÔN HỌC VÀO DANH SÁCH MÔN HỌC 1 LỚP
EXEC sp_THEMMOIMHVAODSMH 1,1
SELECT * FROM DANHSACHMH
GO
--7.XÓA MÔN HỌC KHỎI DANH SÁCH MÔN HỌC CỦA 1 LỚP
CREATE PROC sp_XOAMHKHOIDSMH 
@MALH INT,
@MAMH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MALH IS NULL OR @MALH IS NULL 
  BEGIN
    PRINT N'Thông tin không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM MONHOC WHERE MAMH = @MAMH)
  BEGIN
    PRINT N'Môn học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM LOPHOC WHERE MALH = @MALH)
  BEGIN
    PRINT N'Lớp học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  DELETE FROM DANHSACHMH WHERE MALH = @MALH AND MAMH = @MAMH
  COMMIT TRANSACTION
END
--TEST XÓA MÔN HỌC RA KHỎI DANH SÁCH MÔN HỌC
EXEC sp_XOAMHKHOIDSMH 1,1
SELECT * FROM DANHSACHMH
GO
--1.INSERT SUBJECT 

CREATE PROC sp_THEMMH
@TENMH NVARCHAR(20) 
AS 
BEGIN
  BEGIN TRANSACTION
  IF @TENMH IS NULL
  BEGIN 
    PRINT N'Tên môn học không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END

  IF EXISTS (SELECT 1 FROM MONHOC WHERE TENMH = @TENMH)
  BEGIN 
    PRINT N'Tên môn học đã tồn tại.'
    ROLLBACK
    RETURN
  END
  INSERT INTO MONHOC(TENMH) VALUES (@TENMH)
  COMMIT TRANSACTION
END
GO
--TEST INSERT SUBJECT 
EXEC sp_THEMMH N'Ngữ văn'
SELECT * FROM MONHOC
GO
EXEC sp_THEMMH N'Ngữ văn'
GO
EXEC sp_THEMMH NULL
GO
--2.UPDATE SUBJECT
CREATE PROC sp_CAPNHATMH
@MAMH INT,
@TENMH NVARCHAR(20)
AS
BEGIN
  BEGIN TRANSACTION 
  IF @MAMH IS NULL OR @TENMH IS NULL
  BEGIN 
    PRINT N'Thông tin môn học không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END

  IF NOT EXISTS (SELECT 1 FROM MONHOC WHERE MAMH = @MAMH)
  BEGIN
    PRINT N'Môn học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF EXISTS (SELECT 1 FROM MONHOC WHERE TENMH = @TENMH) 
  BEGIN 
    PRINT N'Tên môn học đã tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  UPDATE MONHOC SET TENMH = @TENMH WHERE MAMH = @MAMH
  COMMIT TRANSACTION
END
GO
--TEST PROC UPDATESUBJECT
EXEC sp_CAPNHATMH 1,N'Anh Văn'
SELECT * FROM MONHOC
GO
EXEC sp_CAPNHATMH 1,N'Anh Văn'
GO
EXEC sp_CAPNHATMH NULL,N'LỚP'
GO
--3.DELETE SUBJECT 
--CREATE TABLE TO BACKUP DATA
CREATE TABLE MONHOC_BACKUP (
MAMH INT NOT NULL,
TENMH NVARCHAR(20) NOT NULL,
DELETEDDATE DATE DEFAULT GETDATE()
)
GO
--CREATE TRIGGER TO BACKUP DATA
CREATE TRIGGER Trg_BACKUPMONHOC
ON MONHOC 
AFTER DELETE
AS 
BEGIN
  BEGIN
  SET IDENTITY_INSERT MONHOC ON;
  END
  INSERT INTO MONHOC_BACKUP(MAMH,TENMH) SELECT MAMH,TENMH FROM deleted;
  BEGIN
  SET IDENTITY_INSERT MONHOC OFF;
  END
END
GO
--CREATE PROC TO DELETE
CREATE PROC sp_XOAMH
@MAMH INT
AS
BEGIN 
  BEGIN TRANSACTION
  IF @MAMH IS NULL
  BEGIN 
    PRINT N'Mã môn học không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  IF NOT EXISTS (SELECT 1 FROM MONHOC WHERE MAMH = @MAMH)
  BEGIN
	PRINT N'Môn học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  UPDATE DETHI SET MAMH = NULL WHERE MAMH = @MAMH
  UPDATE CHUONG SET MAMH = NULL WHERE MAMH = @MAMH
  DELETE FROM DANHSACHMH WHERE MAMH = @MAMH
  DELETE FROM MONHOC WHERE MAMH = @MAMH
  COMMIT TRANSACTION
END
GO
--CREATE PROC RESTORE DATA 
CREATE PROC sp_KHOIPHUCMH
@MAMH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MAMH IS NULL
  BEGIN 
    PRINT N'Mã môn học không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  IF NOT EXISTS (SELECT 1 FROM MONHOC_BACKUP WHERE MAMH = @MAMH)
  BEGIN
	PRINT N'Môn học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  BEGIN
  SET IDENTITY_INSERT MONHOC ON;
  END
  INSERT INTO MONHOC(MAMH,TENMH) SELECT MAMH,TENMH FROM MONHOC_BACKUP BK WHERE BK.MAMH = @MAMH
  DELETE FROM MONHOC_BACKUP WHERE MAMH = @MAMH
  BEGIN
  SET IDENTITY_INSERT MONHOC OFF;
  END
  COMMIT TRANSACTION
END
GO
--TEST DELETE MONHOC
EXEC sp_XOAMH 1
SELECT * FROM MONHOC
SELECT * FROM MONHOC_BACKUP
GO
--TEST RESTORE MONHOC
EXEC sp_KHOIPHUCMH 1
SELECT * FROM MONHOC
SELECT * FROM MONHOC_BACKUP
GO
--4.SEARCH SUBJECT
CREATE PROCEDURE sp_TIMKIEMMH
@SearchText NVARCHAR(20)
AS
BEGIN
  SELECT MH.MAMH, MH.TENMH, COUNT(C.MACHUONG) AS SOCHUONG
  FROM MONHOC MH JOIN CHUONG C ON MH.MAMH = C.MAMH
  WHERE MH.TENMH LIKE '%' + @SearchText + '%'
  OR CAST(MH.MAMH AS NVARCHAR(10)) = @SearchText
  GROUP BY  MH.MAMH, MH.TENMH
  ORDER BY MH.MAMH
END
GO
--TEST SEARCH SUBJECT 
EXEC sp_TIMKIEMMH N'A'
GO
EXEC sp_TIMKIEMMH 1
GO
--***********MANAGE SUBJECT***********
--1.INSERT CHAPTER
CREATE PROC sp_THEMCHUONG
@TENCHUONG NVARCHAR(20) ,
@MAMH INT
AS 
BEGIN
  BEGIN TRANSACTION
  IF @TENCHUONG IS NULL OR @MAMH IS NULL
  BEGIN 
    PRINT N'Thông tin không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  IF NOT EXISTS (SELECT 1 FROM MONHOC WHERE MAMH = @MAMH)
  BEGIN 
    PRINT N'Mã môn học không tồn tại.'
    ROLLBACK TRANSACTION
    RETURN
  END
  INSERT INTO CHUONG (TENCHUONG,MAMH) VALUES (@TENCHUONG,@MAMH)
  COMMIT TRANSACTION
END
GO
--TRIGGER TO DEAL WITH DUPLICATE CHAPTER
CREATE TRIGGER Trg_XULYTRUNGTENCHUONG
ON CHUONG
INSTEAD OF INSERT, UPDATE
AS
BEGIN

  IF EXISTS (
    SELECT 1
    FROM CHUONG c
    INNER JOIN inserted i ON c.MAMH = i.MAMH AND c.TENCHUONG = i.TENCHUONG
  )
  BEGIN
    PRINT(N'Tên chương đã tồn tại trong môn học')
    RETURN;
  END;
  INSERT INTO CHUONG(MAMH, TENCHUONG)
  SELECT MAMH, TENCHUONG
  FROM inserted;
END;
GO
--TEST INSERT CHAPTER
EXEC sp_THEMCHUONG N'Chương 1',1
SELECT * FROM CHUONG
GO
EXEC sp_THEMCHUONG N'Chương 1',1
GO
EXEC sp_THEMCHUONG NULL,1
GO
--2.UPDATE CHAPTER
CREATE PROC sp_CAPNHATCHUONG
@MACHUONG INT,
@TENCHUONG NVARCHAR(20) ,
@MAMH INT
AS 
BEGIN
  BEGIN TRANSACTION
  IF @TENCHUONG IS NULL OR @MAMH IS NULL OR @MACHUONG IS NULL
  BEGIN 
    PRINT N'Thông tin không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  IF NOT EXISTS (SELECT 1 FROM MONHOC WHERE MAMH = @MAMH)
  BEGIN 
    PRINT N'Mã môn học không tồn tại.'
    ROLLBACK TRANSACTION
    RETURN
  END 
  IF NOT EXISTS (SELECT 1 FROM CHUONG WHERE MACHUONG = @MACHUONG)
  BEGIN
    PRINT N'Chương không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  UPDATE CHUONG SET MAMH = @MAMH, TENCHUONG = @TENCHUONG WHERE MACHUONG = @MACHUONG
  COMMIT TRANSACTION
END
GO
--TEST UPDATE CHAPTER
EXEC sp_CAPNHATCHUONG 21,N'Chuong 21',1
SELECT * FROM CHUONG
GO
EXEC sp_CAPNHATCHUONG 24,N'Chuong 21',1
GO
EXEC sp_CAPNHATCHUONG 21,N'Chuong 21',NULL
GO
--4.DELETE CHAPTER 
--CREATE TABLE TO BACKUP DATA
CREATE TABLE CHUONG_BACKUP(
MACHUONG INT PRIMARY KEY,
TENCHUONG NVARCHAR(20) NOT NULL,
MAMH INT NULL,
DELETEDDATE DATE DEFAULT GETDATE()
)
GO
--CREATE TRIGGER TO BACKUP
CREATE TRIGGER Trg_BACKUPCHUONG
ON CHUONG
AFTER DELETE
AS 
BEGIN
  BEGIN
  SET IDENTITY_INSERT CHUONG ON;
  END
  INSERT INTO CHUONG_BACKUP(MACHUONG,TENCHUONG,MAMH) SELECT MACHUONG,TENCHUONG, MAMH FROM deleted;
  BEGIN
  SET IDENTITY_INSERT CHUONG OFF;
  END
END
GO
--CREATE PROC TO DELETE CHUONG
CREATE PROC sp_XOACHUONG
@MACHUONG INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MACHUONG IS NULL
  BEGIN
    PRINT N'Mã chương không được để trống.'
	ROLLBACK TRANSACTION 
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM CHUONG WHERE MACHUONG = @MACHUONG)
  BEGIN 
    PRINT N'Chương học không tồn tại'
	ROLLBACK TRANSACTION
	RETURN 
  END
  UPDATE CAUHOI SET MACHUONG = NULL WHERE MACHUONG = @MACHUONG
  DELETE FROM CHUONG WHERE MACHUONG = @MACHUONG
  COMMIT TRANSACTION
END
GO
--CREATE PROC TO RESTORE DATA
CREATE PROC sp_KHOIPHUCCHUONG
@MACHUONG INT 
AS 
BEGIN
  BEGIN TRANSACTION
  IF @MACHUONG IS NULL 
  BEGIN
    PRINT N'Mã chương không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM CHUONG_BACKUP WHERE MACHUONG = @MACHUONG)
  BEGIN 
    PRINT N'Mã chương không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  DECLARE @MAMH INT
  SELECT @MAMH = MAMH FROM CHUONG_BACKUP WHERE MACHUONG = @MACHUONG
  IF NOT EXISTS (SELECT 1 FROM MONHOC WHERE MAMH = @MAMH)
  BEGIN
    PRINT N'Môn học của chương đã không còn tồn tại.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  BEGIN
  SET IDENTITY_INSERT CHUONG ON;
  END
  INSERT INTO CHUONG(MACHUONG,TENCHUONG,MAMH) SELECT MACHUONG,TENCHUONG,MAMH FROM CHUONG_BACKUP WHERE MACHUONG = @MACHUONG
  DELETE FROM CHUONG_BACKUP WHERE MACHUONG = @MACHUONG
  BEGIN
  SET IDENTITY_INSERT CHUONG OFF;
  END
  COMMIT TRANSACTION
END
GO
--TEST DELETE CHUONG
EXEC sp_XOACHUONG 3
SELECT * FROM CHUONG
SELECT * FROM CHUONG_BACKUP
GO
--TEST RESTORE CHUONG
EXEC sp_KHOIPHUCCHUONG 3
SELECT * FROM CHUONG
SELECT * FROM CHUONG_BACKUP
GO
--5.SEARCH CHAPTER BY NAME, ID OF CHAPTER 
CREATE PROCEDURE sp_TIMKIEMCHUONG
@SearchText NVARCHAR(20)
AS
BEGIN
  SELECT  CH.MACHUONG, CH.TENCHUONG,MH.MAMH, MH.TENMH, COUNT(C.MACH) AS SOCAUHOI
  FROM CHUONG CH JOIN MONHOC MH ON MH.MAMH = CH.MAMH JOIN CAUHOI C ON C.MACHUONG = CH.MACHUONG
  WHERE CH.TENCHUONG LIKE '%' + @SearchText + '%'
  OR CAST(CH.MACHUONG AS NVARCHAR(10)) = @SearchText
  GROUP BY  CH.MACHUONG, CH.TENCHUONG, MH.MAMH, MH.TENMH
  ORDER BY CH.MACHUONG, CH.TENCHUONG, MH.MAMH, MH.TENMH, SOCAUHOI
END
GO
--TEST SEARCH SUBJECT
EXEC sp_TIMKIEMCHUONG N'C'
GO
--**********MANAGE QUESTION**********
--1.INSERT QUESTION
CREATE PROC sp_THEMCAUHOI 
@NOIDUNG TEXT,
@A TEXT, @B TEXT, @C TEXT, @D TEXT, @DAPAN NVARCHAR(1),
@MACHUONG INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @NOIDUNG IS NULL OR @A IS NULL OR @B IS NULL OR @C IS NULL OR @D IS NULL OR @DAPAN IS NULL OR @MACHUONG IS NULL
  BEGIN
    PRINT N'Dữ liệu không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM CHUONG WHERE MACHUONG = @MACHUONG)
  BEGIN
    PRINT N'Chương học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  INSERT INTO CAUHOI VALUES (@NOIDUNG,@A,@B,@C,@D,@DAPAN,@MACHUONG)
  COMMIT TRANSACTION
END
GO
--TEST INSERT QUESTION 
EXEC sp_THEMCAUHOI N'Câu hỏi 1',N'đáp án A',N'đáp án B',N'đáp án C',N'đáp án D', 'A',1
SELECT * FROM CAUHOI
GO
--2.UPDATE QUESTION
CREATE PROC sp_CAPNHATCAUHOI 
@MACH INT,
@NOIDUNG TEXT,
@A TEXT, @B TEXT, @C TEXT, @D TEXT, @DAPAN NVARCHAR(1),
@MACHUONG INT
AS
BEGIN
  BEGIN TRANSACTION 
  IF @NOIDUNG IS NULL OR @A IS NULL OR @B IS NULL OR @C IS NULL OR @D IS NULL OR @DAPAN IS NULL OR @MACHUONG IS NULL
  BEGIN
    PRINT N'Dữ liệu không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM CAUHOI WHERE MACH = @MACH)
  BEGIN
    PRINT N'Câu hỏi không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END 
  ELSE IF NOT EXISTS (SELECT 1 FROM CHUONG WHERE MACHUONG = @MACHUONG)
  BEGIN
    PRINT N'Chương học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  UPDATE CAUHOI SET NOIDUNG = @NOIDUNG, DAPANA = @A, DAPANB = @B, DAPANC = @C, DAPAND = @D, DAPANDUNG = @DAPAN , MACHUONG = @MACHUONG
  COMMIT TRANSACTION
END
GO
--TEST UPDATE CAUHOI
EXEC sp_CAPNHATCAUHOI 1, N'Câu 1',N'đáp án A',N'đáp án B',N'đáp án C',N'đáp án D', 'A',1
SELECT * FROM CAUHOI
GO
--3.DELETE QUESTION
--CREATE TABLE TO BACKUP DATA
CREATE TABLE CAUHOI_BACKUP (
MACH INT NOT NULL,
NOIDUNG TEXT NOT NULL,
A TEXT NOT NULL,
B TEXT NOT NULL,
C TEXT NOT NULL,
D TEXT NOT NULL,
DAPAN NVARCHAR(1) NOT NULL,
MACHUONG INT NULL)
GO
--CREATE TRIGGER TO BACKUP
CREATE TRIGGER Trg_BACKUPCAUHOI 
ON CAUHOI
INSTEAD OF DELETE 
AS 
BEGIN
  INSERT INTO CAUHOI_BACKUP(MACH, NOIDUNG, A, B, C, D, DAPAN, MACHUONG)
  SELECT MACH, NOIDUNG, DAPANA, DAPANB, DAPANC, DAPAND, DAPANDUNG, MACHUONG
  FROM deleted;
  DELETE FROM CAUHOI
  WHERE MACH IN (SELECT MACH FROM deleted);
END;
GO
--CREATE PROC TO DELETE 
CREATE PROC sp_XOACAUHOI
@MACH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MACH IS NULL
  BEGIN
    PRINT N'Mã câu hỏi không được để trống.'
    ROLLBACK TRANSACTION
    RETURN 
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM CAUHOI WHERE MACH = @MACH)
  BEGIN
    PRINT N'Mã câu hỏi không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  DELETE FROM CHITIETDETHI WHERE MACH = @MACH
  DELETE FROM CAUHOI WHERE MACH = @MACH
  COMMIT TRANSACTION
END
GO
--CREATE PROC TO RESTORE DATA
CREATE PROC sp_KHOIPHUCCAUHOI
@MACH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MACH IS NULL 
  BEGIN
    PRINT N'Mã câu hỏi không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM CAUHOI_BACKUP WHERE MACH = @MACH)
  BEGIN
    PRINT N'Mã câu hỏi không tồn tại.'
	ROLLBACK TRANSACTION 
	RETURN
  END
  DECLARE @MACHUONG INT
  SELECT @MACHUONG = MACHUONG FROM CAUHOI_BACKUP WHERE MACH = @MACH
  IF NOT EXISTS (SELECT 1 FROM  CHUONG WHERE MACHUONG = @MACHUONG)
  BEGIN 
    PRINT N'Chương của câu hỏi đã không còn tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  SET IDENTITY_INSERT CAUHOI ON;
  INSERT INTO CAUHOI (MACH,NOIDUNG, DAPANA,DAPANB,DAPANC,DAPAND,DAPANDUNG,MACHUONG) SELECT MACH,NOIDUNG,A,B,C,D,DAPAN,MACHUONG FROM CAUHOI_BACKUP WHERE MACH = @MACH
  DELETE FROM CAUHOI_BACKUP WHERE MACH = @MACH
  SET IDENTITY_INSERT CAUHOI OFF;
  COMMIT TRANSACTION
END
GO
--TEST DELETE CAU HOI
EXEC sp_XOACAUHOI 1
SELECT * FROM CAUHOI
SELECT * FROM CAUHOI_BACKUP
GO
--TEST RESTORE CAU HOI
EXEC sp_KHOIPHUCCAUHOI 1
SELECT * FROM CAUHOI
SELECT * FROM CAUHOI_BACKUP
GO
--5.SEARCH CAU HOI 
CREATE PROCEDURE sp_TIMKIEMCAUHOI
@SearchText NVARCHAR(20)
AS
BEGIN
  SELECT  CH.MACH,CH.NOIDUNG,CH.DAPANA,CH.DAPANB, CH.DAPANC,CH.DAPAND, CH.DAPANDUNG,CH.MACHUONG,C.TENCHUONG
  FROM CAUHOI CH JOIN CHUONG C ON C.MACHUONG = CH.MACHUONG
  WHERE CAST(CH.NOIDUNG AS NVARCHAR(MAX)) LIKE N'%' + @SearchText + N'%'
  OR CAST(CH.MACH AS NVARCHAR(10)) = @SearchText
END
GO
--TEST SEARCH SUBJECT
EXEC sp_TIMKIEMCAUHOI N'C'
GO
--************MANAGE HOC VIEN************
--1.INSERT HOCVIEN
CREATE PROC sp_THEMHOCVIEN
@HOHV NVARCHAR(20),
@TENHV NVARCHAR(20),
@DIACHI NVARCHAR(100),
@SDT NUMERIC(12,0),
@GIOITINH NVARCHAR(3),
@MALH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @HOHV IS NULL OR @TENHV IS NULL OR @DIACHI IS NULL OR @SDT IS NULL OR @GIOITINH IS NULL OR @MALH IS NULL
  BEGIN 
    PRINT N'Thông tin nhập không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM LOPHOC WHERE MALH = @MALH)
  BEGIN
    PRINT N'Lớp học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  DECLARE @MATKHAU NVARCHAR(16)
  SET @MATKHAU = SUBSTRING(CONVERT(NVARCHAR(36), NEWID()), 2, 15)
  INSERT INTO HOCVIEN (HOHV,TENHV,DIACHI,SDT,GIOITINH,MATKHAU,MALH) VALUES (@HOHV,@TENHV,@DIACHI,@SDT,@GIOITINH,@MATKHAU,@MALH)
  COMMIT TRANSACTION
END
GO
--TEST INSERT HOCVIEN
EXEC sp_THEMHOCVIEN N'Lê',N'Hoàng',N'HCM Thủ đức',03978379,N'Nam',1
SELECT * FROM HOCVIEN
GO
--2.UPDATE HOCVIEN
CREATE PROC sp_CAPNHATHOCVIEN
@MAHV INT,
@HOHV NVARCHAR(20),
@TENHV NVARCHAR(20),
@DIACHI NVARCHAR(100),
@SDT NUMERIC(12,0),
@GIOITINH NVARCHAR(3),
@MALH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MAHV IS NULL OR @HOHV IS NULL OR @TENHV IS NULL OR @DIACHI IS NULL OR @SDT IS NULL OR @GIOITINH IS NULL OR @MALH IS NULL
  BEGIN 
    PRINT N'Thông tin nhập không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM LOPHOC WHERE MALH = @MALH)
  BEGIN
    PRINT N'Lớp học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  UPDATE HOCVIEN SET HOHV = @HOHV , TENHV = @TENHV, DIACHI = @DIACHI, SDT = @SDT , GIOITINH = @GIOITINH, MALH = @MALH WHERE MAHV = @MAHV
  COMMIT TRANSACTION
END
GO
--TEST UPDATE HOC VIEN
EXEC sp_CAPNHATHOCVIEN  1,N'Lê',N'Ninh',N'HCM Thủ đức',03978379,N'Nam',1
SELECT * FROM HOCVIEN
GO
--3.DELETE HOC VIEN
--CREATE TABLE TO BACKUP 
CREATE TABLE HOCVIEN_BACKUP
(
MAHV INT NOT NULL,
HOHV NVARCHAR(20) NOT NULL,
TENHV NVARCHAR(20) NOT NULL,
DIACHI NVARCHAR(100) NULL,
GIOITINH NVARCHAR(3) NOT NULL CHECK (GIOITINH IN (N'Nam',N'Nữ')),
SDT NUMERIC(12,0) NOT NULL CHECK (SDT > 0 AND LEN(SDT)<12),
MATKHAU NVARCHAR(16) NOT NULL CHECK (LEN(MATKHAU) > 5),
MALH INT NULL,
DELETEDDATE DATE DEFAULT GETDATE(),
)
GO
--CREATE TRIGGER TO DELETE 
CREATE TRIGGER Trg_BACKUPHOCVIEN
ON HOCVIEN
AFTER DELETE 
AS
BEGIN
  INSERT INTO HOCVIEN_BACKUP(MAHV,HOHV,TENHV,DIACHI,GIOITINH,SDT,MATKHAU,MALH)
  SELECT MAHV,HOHV,TENHV,DIACHI,GIOITINH,SDT,MATKHAU,MALH
  FROM deleted;
END
GO
--CREATE PROC TO DELETE 
CREATE PROC sp_XOAHOCVIEN
@MAHV INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MAHV IS NULL 
  BEGIN
    PRINT N'Mã học viên không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM HOCVIEN WHERE MAHV = @MAHV)
  BEGIN
    PRINT N'Mã học viên không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  DELETE FROM CHITIETBAILAM WHERE MAHV = @MAHV
  DELETE FROM HOCVIEN WHERE MAHV = @MAHV
  COMMIT TRANSACTION
END
GO
--CREATE RESTORE DATA
CREATE PROC sp_KHOIPHUCHOCVIEN
@MAHV INT
AS
BEGIN
  BEGIN TRANSACTION 
  IF @MAHV IS NULL 
  BEGIN
    PRINT N'Mã học viên không được để trống.'
	ROLLBACK TRANSACTION
	RETURN 
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM HOCVIEN_BACKUP WHERE MAHV = @MAHV)
  BEGIN 
    PRINT N'Mã học viên không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  DECLARE @MALH INT
  SELECT @MALH = MALH FROM HOCVIEN_BACKUP WHERE MAHV = @MAHV
  IF NOT EXISTS (SELECT 1 FROM LOPHOC WHERE MALH = @MALH)
  BEGIN 
	SET IDENTITY_INSERT HOCVIEN ON;
    INSERT INTO HOCVIEN(MAHV,HOHV,TENHV,DIACHI,GIOITINH,SDT,MATKHAU,MALH) SELECT MAHV,HOHV,TENHV,DIACHI,GIOITINH,SDT,MATKHAU,NULL FROM HOCVIEN_BACKUP
    SET IDENTITY_INSERT HOCVIEN OFF;
	DELETE FROM HOCVIEN_BACKUP WHERE MAHV = @MAHV
	COMMIT TRANSACTION
	RETURN
  END
  ELSE 
  BEGIN
    SET IDENTITY_INSERT HOCVIEN ON;
    INSERT INTO HOCVIEN(MAHV,HOHV,TENHV,DIACHI,GIOITINH,SDT,MATKHAU,MALH) SELECT MAHV,HOHV,TENHV,DIACHI,GIOITINH,SDT,MATKHAU,MALH FROM HOCVIEN_BACKUP
    SET IDENTITY_INSERT HOCVIEN OFF;
	DELETE FROM HOCVIEN_BACKUP WHERE MAHV = @MAHV
	COMMIT TRANSACTION
	RETURN
  END
END
GO
--TEST DELETE HOCVIEN
EXEC sp_XOAHOCVIEN 1
SELECT * FROM HOCVIEN
SELECT * FROM HOCVIEN_BACKUP
GO
--TEST RESTORE HOCVIEN
EXEC sp_KHOIPHUCHOCVIEN 1
SELECT * FROM HOCVIEN
SELECT * FROM HOCVIEN_BACKUP
GO
--4.SEARCH INFO BY NAME OR ID
CREATE PROCEDURE sp_TIMKIEMHOCVIEN
@SearchText NVARCHAR(20)
AS
BEGIN
  SELECT  HV.MAHV,HV.HOHV+' '+HV.TENHV AS HOTEN, HV.DIACHI,HV.GIOITINH,HV.SDT, LH.MALH, LH.TENLH
  FROM HOCVIEN HV JOIN LOPHOC LH ON HV.MALH = LH.MALH
  WHERE HV.TENHV  LIKE N'%' + @SearchText + N'%'
  OR HV.HOHV  LIKE N'%' + @SearchText + N'%'
  OR CAST(HV.MAHV AS NVARCHAR(10)) = @SearchText
  ORDER BY HV.MAHV
END
GO
--TEST SEARCH SUBJECT
EXEC sp_TIMKIEMHOCVIEN N'L'
GO
--**********THI THU TREN HE THONG**********
--1.AUTO CREATE DETHI
CREATE PROC sp_TAODETHITUDONG
@MAHV INT,
@MAMH INT
AS
BEGIN
  BEGIN TRANSACTION
  IF @MAHV IS NULL OR @MAMH IS NULL 
  BEGIN
    PRINT N'Thông tin không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM HOCVIEN WHERE MAHV = @MAHV) OR NOT EXISTS (SELECT 1 FROM MONHOC WHERE MAMH = @MAMH)
  BEGIN
    PRINT N'Mã học viên hoặc mã môn học không tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  DECLARE @SOLUONGCH INT
  SELECT @SOLUONGCH = COUNT(CH.MACH) FROM CAUHOI CH JOIN CHUONG C ON C.MACHUONG = CH.MACHUONG JOIN MONHOC MH ON MH.MAMH = C.MAMH WHERE MH.MAMH = @MAMH 
  IF(@SOLUONGCH <40)
  BEGIN
    PRINT N'Đề thi chưa sẵn sàng.'
	ROLLBACK TRANSACTION
	RETURN
  END
  DECLARE @INSERTEDDETHI TABLE(
  MADT INT,
  NGAYTHI DATE,
  MAMH INT
  )
  INSERT INTO DETHI (NGAYTHI,MAMH) OUTPUT inserted.MADT,inserted.NGAYTHI,inserted.MAMH INTO @INSERTEDDETHI VALUES (GETDATE(),@MAMH)
  DECLARE @MADT INT
  DECLARE @NGAYTHI DATE
  SELECT @MADT = MADT, @NGAYTHI = NGAYTHI FROM @INSERTEDDETHI 
  DECLARE @DSCH TABLE(
  ID INT IDENTITY,
  MACH INT UNIQUE 
  )
  INSERT INTO @DSCH SELECT TOP 40 MACH FROM CAUHOI ORDER BY NEWID()
  DECLARE @COUNTER INT = 1
  WHILE @COUNTER <= (SELECT MAX(ID) FROM @DSCH)
  BEGIN
    DECLARE @MACAUHOI INT
    SELECT @MACAUHOI = MACH FROM @DSCH WHERE ID = @COUNTER
    INSERT INTO CHITIETDETHI (MADT, MACH,SOTT)
    VALUES (@MADT, @MACAUHOI,@COUNTER)

    SET @COUNTER = @COUNTER + 1
  END
  COMMIT TRANSACTION
END
GO
--TEST TẠO ĐỀ THI
EXEC sp_TAODETHITUDONG 1,1
SELECT * FROM DETHI
SELECT * FROM CHITIETDETHI
--2.SAVE BÀI LÀM 
CREATE PROC sp_LUUDAPANBAILAM
@MAHV INT,
@MADT INT,
@STT INT,
@CAUTRALOI VARCHAR(1) 
AS
BEGIN
  BEGIN TRANSACTION 
  IF @MAHV IS NULL OR @MADT IS NULL OR @STT IS NULL
  BEGIN
    PRINT N'Thông tin không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM HOCVIEN WHERE MAHV = @MAHV) OR NOT EXISTS (SELECT 1 FROM DETHI WHERE MADT = @MADT)
  BEGIN
    PRINT N'Mã học viên hoặc mã đề thi không còn tồn tại.'
	ROLLBACK TRANSACTION
	RETURN
  END
  INSERT INTO CHITIETBAILAM (MAHV,MADT,SOTT,CAUTL) VALUES (@MAHV,@MADT,@STT,@CAUTRALOI)
  COMMIT TRANSACTION
END
GO
--TEST LƯU CÂU TRẢ LỜI
EXEC sp_LUUDAPANBAILAM 1,1,1,C
SELECT * FROM CHITIETBAILAM
GO
--3.CHẤM BÀI TỰ ĐỘNG
--HÀM CHẤM ĐIỂM
CREATE FUNCTION dbo.CHAMDIEM (@MAHV INT,@MADT INT)
RETURNS DECIMAL(4,2)
AS 
BEGIN
  DECLARE @TONG DECIMAL(4,2)
  SET @TONG = 0.0
  DECLARE @BANGCHAM TABLE (
  MACH INT, 
  STT INT,
  CAUTL NVARCHAR(1),
  DAPAN NVARCHAR(1)
  )
  INSERT INTO @BANGCHAM (MACH,STT,CAUTL,DAPAN) SELECT CTDT.MACH,CTBL.SOTT,CTBL.CAUTL,CH.DAPANDUNG FROM CHITIETBAILAM CTBL JOIN CHITIETDETHI CTDT ON CTBL.MADT = CTDT.MADT JOIN CAUHOI CH ON CH.MACH = CTDT.MACH WHERE CTBL.SOTT = CTDT.SOTT AND CTDT.MADT = @MADT
  DECLARE @COUNTER DECIMAL(4,2) = 1.0
  WHILE @COUNTER <=  (SELECT MAX(STT) FROM @BANGCHAM)
  BEGIN
    DECLARE @TT VARCHAR(1)
	DECLARE @DA VARCHAR(1)
	SELECT @TT = CAUTL , @DA = DAPAN FROM @BANGCHAM WHERE @COUNTER = STT
	IF @TT = @DA 
	BEGIN 
	  SET @TONG = @TONG + 1
	END
	SET @COUNTER = @COUNTER + 1
  END
  SET @TONG = (@TONG / (SELECT MAX(STT) FROM @BANGCHAM)) * 10
  RETURN @TONG
END
GO
--TEST CHAM DIEM
SELECT dbo.CHAMDIEM(1,1) AS TOTAL
--*********QUẢN LÝ THÔNG TIN CÁ  NHÂN*********
--TRA CỨU KẾT QUẢ THI
CREATE FUNCTION  dbo.TRACUUKETQUA (@MAHV INT,@MAMH INT)
RETURNS @BANGDIEM TABLE (
MAHV INT,
HOTEN NVARCHAR(41),
MONHOC NVARCHAR(20),
MADETHI INT,
KETQUA DECIMAL(4,2)
)
AS
BEGIN
  INSERT INTO @BANGDIEM (MAHV,HOTEN,MONHOC,MADETHI,KETQUA) SELECT TOP 5 HV.MAHV,HV.HOHV+' '+HV.TENHV AS HOTEN,MH.TENMH,DT.MADT, dbo.CHAMDIEM(@MAHV,DT.MADT) AS KETQUA FROM DETHI DT JOIN MONHOC MH ON MH.MAMH = DT.MAMH
  JOIN CHITIETBAILAM CTBL ON CTBL.MADT = DT.MADT
  JOIN HOCVIEN HV ON HV.MAHV = CTBL.MAHV
  WHERE MH.MAMH = @MAMH AND HV.MAHV = @MAHV
  GROUP BY HV.MAHV, HV.HOHV+' '+HV.TENHV,MH.TENMH,DT.MADT,dbo.CHAMDIEM(@MAHV,DT.MADT)
  RETURN 
END
GO
--
SELECT * from dbo.TRACUUKETQUA(1,1)
GO
--2.CẬP NHẬT MẬT KHẨU
CREATE PROC sp_CAPNHATMATKHAU 
@MAHV INT,
@MKCU NVARCHAR(16),
@MKMOI NVARCHAR(16)
AS
BEGIN
  BEGIN TRANSACTION
  IF @MAHV IS NULL OR @MKCU IS NULL OR @MKMOI IS NULL
  BEGIN
    PRINT N'Thông tin không được để trống.'
	ROLLBACK TRANSACTION
	RETURN
  END
  ELSE IF NOT EXISTS (SELECT 1 FROM HOCVIEN WHERE MAHV = @MAHV AND MATKHAU = @MKCU)
  BEGIN
    PRINT N'Thông tin đăng nhập bị sai.'
	ROLLBACK TRANSACTION
	RETURN
  END
  UPDATE HOCVIEN SET MATKHAU = @MKMOI WHERE MAHV = @MAHV
  COMMIT TRANSACTION
END
GO
SELECT * FROM HOCVIEN
EXEC sp_CAPNHATMATKHAU 1,N'7A2C8EF-EE2C-47',N'123456'
GO
